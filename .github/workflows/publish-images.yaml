name: publish_images

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  export-registry:
    runs-on: ubuntu-20.04
    outputs:
      registry: ${{ steps.export.outputs.registry }}
    steps:
      - id: export
        run: |
          # registry must be in lowercase
          echo "::set-output name=registry::$(echo "ghcr.io/${{ github.repository }}" | tr [:upper:] [:lower:])"

  publish-images:
    needs: export-registry
    env:
      REGISTRY: ${{ needs.export-registry.outputs.registry }}
    strategy:
      fail-fast: false
      matrix:
        image: [webhook, proxy, proxy-init]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
      - name: Login to ghcr.io
        uses: docker/login-action@bb984efc561711aaa26e433c32c3521176eae55b
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build ${{ matrix.image }}
        run: |
          make docker-build docker-push-manifest
        env:
          ALL_IMAGES: ${{ matrix.image }}
          IMAGE_VERSION: latest

  publish-example-images:
    needs: export-registry
    env:
      REGISTRY: ${{ needs.export-registry.outputs.registry }}
    strategy:
      fail-fast: false
      matrix:
        dir: [examples/msal-go, examples/msal-net/akvdotnet, examples/msal-node, examples/msal-python, examples/msal-java]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
      - name: Login to ghcr.io
        uses: docker/login-action@bb984efc561711aaa26e433c32c3521176eae55b
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: nick-invision/retry@v2
        with:
          timeout_minutes: 20
          max_attempts: 3
          command: |
            make docker-buildx-builder
            make -C ${{ matrix.dir }} container-all push-manifest
