apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: aad-pi-webhook-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: aad-pi-webhook-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aad-pi-webhook-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: aad-pi-webhook-system
---
apiVersion: v1
data:
  AZURE_ENVIRONMENT: HELMSUBST_CONFIGMAP_AZURE_ENVIRONMENT
  AZURE_TENANT_ID: HELMSUBST_CONFIGMAP_AZURE_TENANT_ID
kind: ConfigMap
metadata:
  name: aad-pi-webhook-config
  namespace: aad-pi-webhook-system
---
apiVersion: v1
kind: Service
metadata:
  name: aad-pi-webhook-webhook-service
  namespace: aad-pi-webhook-system
spec:
  HELMSUBST_SERVICE_TYPE: ""
  ports:
  - port: {{ .Values.service.port }}
    targetPort: {{ .Values.service.targetPort }}
  selector:
    mpod.aad-pod-identity.io/system: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    mpod.aad-pod-identity.io/system: "true"
  name: aad-pi-webhook-controller-manager
  namespace: aad-pi-webhook-system
spec:
  replicas: HELMSUBST_DEPLOYMENT_REPLICAS
  selector:
    matchLabels:
      mpod.aad-pod-identity.io/system: "true"
  template:
    metadata:
      labels:
        mpod.aad-pod-identity.io/system: "true"
    spec:
      containers:
      - args:
        - -arc-cluster={{ .Values.arcCluster }}
        command:
        - /manager
        envFrom:
        - configMapRef:
            name: aad-pi-webhook-config
        image: "{{ .Values.image.repository }}:{{ .Values.image.release }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        resources:
          HELMSUBST_DEPLOYMENT_CONTAINER_RESOURCES: ""
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      nodeSelector:
        HELMSUBST_DEPLOYMENT_NODE_SELECTOR: ""
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: aad-pi-webhook-serving-cert
  namespace: aad-pi-webhook-system
spec:
  dnsNames:
  - $(SERVICE_NAME).$(SERVICE_NAMESPACE).svc
  - $(SERVICE_NAME).$(SERVICE_NAMESPACE).svc.cluster.local
  issuerRef:
    kind: Issuer
    name: aad-pi-webhook-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: aad-pi-webhook-selfsigned-issuer
  namespace: aad-pi-webhook-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: $(CERTIFICATE_NAMESPACE)/$(CERTIFICATE_NAME)
  name: aad-pi-webhook-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: aad-pi-webhook-webhook-service
      namespace: aad-pi-webhook-system
      path: /mutate-v1-pod
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: mpod.aad-pod-identity.io
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pods
  sideEffects: None
